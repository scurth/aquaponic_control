#!/usr/bin/python
#
# Author: Sascha Curth
#
import urllib2
import json
import datetime

now = datetime.datetime.now()

pt100uri = "http://127.0.0.1:4444/bySerial/PT100MK1-14BD3"
relayuri = "http://127.0.0.1:4444/bySerial/RELAYHI1-15D60"
watturi = "http://10.0.1.248:4444/bySerial/YWATTMK1-13D0F"

wattapi = ("%s/%s") % (watturi, "api.json")
wattresponse = urllib2.urlopen(wattapi)
wattdata = json.loads(wattresponse.read())
wattvalue = wattdata["power"]["advertisedValue"]

###################
# CONFIG PART BEGIN

if now.hour > 11  and now.hour < 19:
    uppertemp = 25
    lowertemp = 24
else:
    uppertemp = 24
    lowertemp = 23

# CONFIG PART END
###################
temperatureapi = ("%s/%s") % (pt100uri, "api.json")
temperatureresponse = urllib2.urlopen(temperatureapi)
temperaturedata = json.loads(temperatureresponse.read())
temperaturvalue = temperaturedata["temperature"]["advertisedValue"]

relayapi = ("%s/%s") % (relayuri, "api.json")
relayresponse = urllib2.urlopen(relayapi)
relaydata = json.loads(relayresponse.read())
relaystate = relaydata["relay1"]["advertisedValue"]

# Solar energy usage override
if relaystate == "A" and float(wattvalue) < -100 and float(temperaturvalue) < 26:
    desiredstate = "B"
    rawstate = 1
    print "[%s] using over energy for heater, relaystate:%s, temp: %s" % (now,relaystate,temperaturvalue)
else:
    if float(temperaturvalue) > uppertemp:
        desiredstate = "A"
        rawstate = 0
        print "[%s] temperature too high, relaystate:%s, temp: %s" % (now,relaystate,temperaturvalue)
    elif float(temperaturvalue) < lowertemp:
        desiredstate = "B"
        rawstate = 1
        print "[%s] temperature too low, relaystate:%s, temp: %s" % (now,relaystate,temperaturvalue)
    else:
        desiredstate = relaystate
        print "[%s] All fine, relaystate:%s, temp: %s" % (now,relaystate,temperaturvalue)


if desiredstate != relaystate:
    print "[%s] Temp: %s, switching to %s" % (now,temperaturvalue,desiredstate)
    relaycall = ("%s/%s%s") % (relayuri,"api/relay1?state=",rawstate)
    relaycallresponse = urllib2.urlopen(relaycall)

